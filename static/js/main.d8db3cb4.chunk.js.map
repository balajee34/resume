{"version":3,"sources":["logo.svg","fonts/Rochester-Regular.otf","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","Container","fluid","style","Row","Col","md","float","width","height","src","offset","span","alt","title","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d8db3cb4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rochester-Regular.5f826d26.otf\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Col,Container,Row } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n          <div className=\"header\">\n            <h1> B </h1>\n          </div>\n          <Container fluid={true} style={{'margin-top': '100px'}}>\n            <Row>\n              <Col md={8}>\n                <div className=\"intro\">\n                  <p><img style={{float: 'right',width:'250px',height:'250px'}} src='coding__isometric.svg'/>Hi Iam <span>Balajee</span>, <br/>\n                  A Software engineer who is interested in working on new technologies.\n                  Currently working on Hadoop platform in building batch and real time data pipelines.\n                  My previous experience include building a product from scratch in a startup as an individual contributor.</p>\n                </div>\n              </Col>\n              <Col md={4}>\n              </Col>\n            </Row>\n            <br/>\n            <Row>\n              <Col md={{offset: 6,span: 6}}>\n                <div className=\"skillSet\">\n                  <img src={'data_process.svg'} style={{float: 'left',width:'250px',height:'250px'}}/>\n                    Backend Skills:\n                    <img alt=\"java\" src=\"java.png\" title=\"java\"/>\n                    <img alt=\"python\" src=\"python.svg\" title=\"python\"/>\n                    <img alt=\"django\" src=\"django.svg\" title=\"django\"/>\n                    <img alt=\"mysql\" src=\"mysql.png\" title=\"mysql\"/><br />\n                    Front-end Skills:\n                    <img src=\"react.png\" title=\"react\"/>\n                    <img alt=\"ember\" src=\"ember.svg\" title=\"ember\"/>\n                    <img alt=\"angular\" src=\"angular.svg\" title=\"angular\"/><br />\n                    DataEngineering: \n                    <img src=\"hadoop.svg\" title=\"hadoop\"/>\n                    <img src=\"kafka.jpg\" title=\"kafka\"/>\n                    <img src=\"bash.png\" title=\"bash\"/>\n                    <img alt=\"python\" src=\"python.svg\" title=\"python\"/>\n                    <img alt=\"sqoop\" src=\"sqoop.png\" title=\"sqoop\"/><br />                    \n                </div>\n              </Col>\n            </Row>\n            <br />\n            <Row className=\"timeline-row\">\n              <Col md={12}>\n                <div className=\"timeline\">\n                  <p className=\"timeline-start\"> Now</p>\n                  <Container className=\"timeline-container left\">\n                    <p className=\"content\">                  \n                      <h3>2020</h3>\n                      <p className=\"role\"> Senior Software Engineer at Freshworks</p>\n                      <p className=\"works\"> Worked in building batch and real-time pipelines</p>\n                      <div className=\"frameworks\">\n                        <img alt=\"kudu\" src=\"kudu.png\" title=\"kudu\"/>\n                        <img src=\"kafka.jpg\" title=\"kafka\"/>\n                        <img src=\"hadoop.svg\" title=\"hadoop\"/>\n                        <img src=\"react.png\" title=\"react\"/>\n                        <img src=\"java.svg\" title=\"java\"/>\n                      </div>\n                    </p>\n                  </Container>\n                  <Container className=\"timeline-container right\">\n                    <p className=\"content\">\n                      <h3>2018</h3>\n                      <p className=\"role\"> Software Engineer @ Freshworks</p>\n                      <p className=\"works\"> Worked in modifying the Front-end of Cloudera Hue, Apache Zeppelin to improve the User Experience</p>\n                      <div className=\"frameworks\">\n                          <img alt=\"ember\" src=\"ember.svg\" title=\"ember\"/>\n                          <img src=\"javascript.svg\" title=\"javascript\"/>\n                          <img src=\"django.svg\" title=\"django\"/>\n                          <img src=\"python.svg\" title=\"react\"/>\n                          <img src=\"java.svg\" title=\"java\"/>\n                      </div>\n                    </p>\n                  </Container>\n                  <Container className=\"timeline-container left\">\n                    <p className=\"content\">\n                      <h3>2017</h3>\n                      <p> Software Engineer @ Detect Technologies </p>\n                      <p> Built a product(WebApp for monitoring the leakages from pipelines/cylingers in factories) from scratch using Django and angular2</p>\n                      <div className=\"frameworks\">\n                          <img alt=\"ember\" src=\"angular.svg\" title=\"ember\"/>\n                          <img src=\"javascript.svg\" title=\"javascript\"/>\n                          <img src=\"html.png\" title=\"html\"/>\n                          <img src=\"css.png\" title=\"css\"/>\n                          <img src=\"python.svg\" title=\"python\"/>\n                          <img src=\"django.svg\" title=\"django\"/>\n                      </div>\n                    </p>\n                  </Container>\n                </div>\n              </Col>\n            </Row>\n            <Row>  \n              <div className=\"blogs\">\n                <div className=\"blog\"></div>\n              </div>\n            </Row>  \n          </Container>\n          <div className=\"footer\">            \n            <span>&#169; Balajee</span>\n          </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './fonts/Rochester-Regular.otf'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}